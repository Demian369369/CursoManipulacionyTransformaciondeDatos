scalar: dim = 0 Un solo dato o valor

vector: dim = 1 Listas de Python

matriz: dim = 2 Hoja de cálculo

tensor: dim > 3 Series de tiempo o Imágenes

Declarando un escalar.


scalar = np.array(42)
print(scalar) ----> 42
scalar.ndim ----> 0
Declarando un vector.


vector = np.array([1, 2, 3])
print(vector) ----> [1 2 3]
vector.ndim ----> 1
Declarando una matriz.


matriz = np.array([[1, 2, 3], [4, 5, 6]])
print(matriz)
matriz.ndim
---->[[1 2 3]
 	 	 [4 5 6]]
----> 2
Declarando un tensor.


tensor = np.array([[[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]],[[13, 13, 15], [16, 17, 18], [19, 20, 21], [22, 23, 24]]])
print(tensor)
tensor.ndim
----> [[[ 1  2  3]
  		[ 4  5  6]
  		[ 7  8  9]
  		[10 11 12]]

 			[[13 13 15]
  		[16 17 18]
 		 	[19 20 21]
 			[22 23 24]]]	
----> 3
Agregar o eliminar dimensiones
Se puede definir el número de dimensiones desde la declaración del array


vector = np.array([1, 2, 3], ndmin = 10)
print(vector) ----> [[[[[[[[[[1 2 3]]]]]]]]]]
vector.ndim ----> 10
Se pueden expandir dimensiones a los array ya existentes. Axis = 0 hace refencia a las filas, mientras que axis = 1 a las columnas.


expand = np.expand_dims(np.array([1, 2, 3]), axis = 0)
print(expand) ----> [[1 2 3]]
expand.ndim ----> 2
Remover/comprimir las dimensiones que no están siendo usadas.


print(vector, vector.ndim) ----> [[[[[[[[[[1 2 3]]]]]]]]]] 10
vector_2 = np.squeeze(vector)
print(vector_2, vector_2.ndim) ----> [1 2 3] 1
Reto
Definir un tensor de 5 dimensiones
Sumar una dimensión en algún eje
Borrar dimensiones que no se usen

tensor5 = np.array([[[[1, 2],[3, 4]], [[5, 6],[7, 8]]], [[[1, 2],[3, 4]], [[5, 6],[7, 8]]]], ndmin = 5)
print(tensor5, tensor5.ndim)
[[[[[1 2]
    [3 4]]

   [[5 6]
    [7 8]]]


  [[[1 2]
    [3 4]]

   [[5 6]
    [7 8]]]]] 5

expand5 = np.expand_dims(tensor5, axis=1)
print(expand5, expand5.ndim)
[[[[[[1 2]
     [3 4]]

    [[5 6]
     [7 8]]]


   [[[1 2]
     [3 4]]

    [[5 6]
     [7 8]]]]]] 6

print(expand5, expand5.ndim)
reduced5 = np.squeeze(expand5)
print(reduced5, reduced5.ndim)
[[[[[[1 2]
     [3 4]]

    [[5 6]
     [7 8]]]


   [[[1 2]
     [3 4]]

    [[5 6]
     [7 8]]]]]] 6
[[[[1 2]
   [3 4]]

  [[5 6]
   [7 8]]]


 [[[1 2]
   [3 4]]

  [[5 6]
   [7 8]]]] 4